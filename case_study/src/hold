subroutine initialise_standard_topology_1d(pool_size, old_comm, new_comm, new_rank, nbrs)
    
    use neighbour_indexes                   ! Provides standardised values of left, right

    integer, intent(in)                     :: pool_size
    integer, intent(in)                     :: old_comm

    integer, intent(out)                    :: new_comm
    integer, intent(out)                    :: new_rank
    integer, intent(inout),                    :: nbrs(2)

    integer                                 :: num_dims
    integer                                 :: dims(1)
    integer                                 :: ierr
    integer                                 :: x_dir 
    integer                                 :: displacement

    logical                                 :: periodic(1)
    logical                                 :: reorder(1)


    !
    ! Assumes topology displacements/directions are all as normal (i.e., 0, 1, etc.)
    !

    num_dims        = 1
    dims(1)         = 0 ! Initialise to 0 to let MPI fill it in
    x_dir           = 0
    displacement    = 1

    periodic(1)     = .false.
    reorder(1)      = .false.

    ! Now create the topology

    call MPI_DIMS_CREATE(pool_size, num_dims, dims, ierr)
    call MPI_CART_CREATE(comm, num_dims, dims, periodic, reorder, new_comm, ierr)
    call MPI_COMM_RANK(new_comm, new_rank, ierr)
    call MPI_CART_SHIFT(new_comm, x_dir, displacement, nbrs(left), nbrs(right), ierr)

end subroutine initialise_standard_topology_1d

subroutine util_array_copy(new, old)

    double precision, dimension(:,:), intent(inout) :: new
    double precision, dimension(:,:), intent(in)    :: old

    integer                                         :: dims_new(2)
    integer                                         :: dims_old(2)

    dims_new = shape(new)
    dims_old = shape(old)

    if ( (dims_new(1) .ne. dims_old(1)) .OR. (dims_new(2) .ne. dims_old(2)) ) then

        call MPI_FINALIZE(ierr)
        error stop "Error: tried to util_array_copy but the dimensions didn't match."

    end if

    ! Use array slicing for now

    new(:,:) = old(:,:)

end subroutine util_array_copy

subroutine util_array_copy(new, old)

    double precision, dimension(:,:), intent(inout) :: new
    double precision, dimension(:,:), intent(in)    :: old

    integer                                         :: dims_new(2)
    integer                                         :: dims_old(2)

    integer                                         :: i, j

    dims_new = shape(new)
    dims_old = shape(old)

    if ( (dims_new(1) .ne. dims_old(1)) .OR. (dims_new(2) .ne. dims_old(2)) ) then

        call MPI_FINALIZE(ierr)
        error stop "Error: tried to util_array_copy but the dimensions didn't match."

    end if

    ! Use array slicing for now

    do j = 1, dims_new(2)

        do i = 1,dims_new(1)

            new(i, j) = old(i, j)

        end do

    end do

end subroutine util_array_copy